import glob
import time
import csv
import os
from datetime import datetime
import  paho.mqtt.client as mqtt

temp_f = 0
base_dir = '/sys/bus/w1/devices/'
device_files = []
device_files.append(base_dir + '/28-3c01f095bdb1/w1_slave')
device_files.append(base_dir + '/28-3c01f0955b4b/w1_slave')

mqttBroker = "mqtt.eclipseprojects.io"
client = mqtt.Client("Temperature_Probes")
client.connect(mqttBroker)
print(client)

def on_connect(client, userdata, flags, rc):
	if rc==0:
		print("Connected OK, Returned code=", rc)
	else:
		print("Bad connection, returned code=", rc)

def read_temp_raw(device_file):
	f = open(device_file, 'r')
	lines = f.readlines()
	f.close()
	return lines

def read_temp(device_file):
	lines = read_temp_raw(device_file)
	while lines[0].strip()[-3:] != 'YES':
		time.sleep(0.2)
	 	lines = read.temp.raw_a
	equals_pos =  lines[1].find('t=')
	if equals_pos != -1:
		temp_string = lines[1][equals_pos+2:]
		temp_c = int(temp_string) /1000 + 0.7
		global temp_f
		temp_f = temp_c * 9.0 / 5.0 + 32
		temp_c = str(round(temp_c, 2))
		return temp_f

temperature_results = [0]*len(device_files)


while True:

	for device_num, device_file in enumerate(device_files):
		now = datetime.now()
		dt_string = now.strftime("%d/%m/%y  %H:%M:%S")
		temperature_results[device_num] = read_temp(device_file)
		client.publish("Temperature",temperature_results[device_num])
		print('Probe #1: ' + str(temperature_results[0]) + ' F, ' + 'Probe #2: ' + str(temperature_results[1]) + ' F  at ' + dt_string)
		#print('Probe #2: ' + str(temperature_results[1]) + ' F' + ' at ' + dt_string) 
		time.sleep(1)

